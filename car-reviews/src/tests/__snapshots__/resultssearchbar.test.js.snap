// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders ResultsSearchBar component correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResultsSearchbar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          style={
                    Object {
                              "height": "65px",
                            }
          }
/>,
        <div
          className="searchbar"
>
          <Unknown />
          <LoginRegisterModal
                    handleChangeModalType={[Function]}
                    handleModalState={[Function]}
                    handleSetJwtState={[Function]}
                    isOpen={false}
                    type="login"
          />
          <div
                    className="searchfields"
          >
                    <select
                              className="dropdowns"
                              name="make"
                              onChange={[Function]}
                    >
                              <option>
                                        Select a Make
                              </option>
                    </select>
                    <Unknown />
                    <Unknown />
          </div>
          <div
                    className="searchbar-buttons-container"
          >
                    <Link
                              className="searchbar-buttons-links"
                              replace={false}
                              to="/login"
                    >
                              <Button
                                        className="searchbar-buttons"
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button"
                              >
                                        Review
                              </Button>
                    </Link>
                    <div
                              className="searchbar-buttons-links"
                    >
                              <Button
                                        className="searchbar-buttons"
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button"
                              >
                                        Search
                              </Button>
                    </div>
          </div>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "style": Object {
            "height": "65px",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Unknown />,
            <LoginRegisterModal
              handleChangeModalType={[Function]}
              handleModalState={[Function]}
              handleSetJwtState={[Function]}
              isOpen={false}
              type="login"
/>,
            <div
              className="searchfields"
>
              <select
                            className="dropdowns"
                            name="make"
                            onChange={[Function]}
              >
                            <option>
                                          Select a Make
                            </option>
              </select>
              <Unknown />
              <Unknown />
</div>,
            <div
              className="searchbar-buttons-container"
>
              <Link
                            className="searchbar-buttons-links"
                            replace={false}
                            to="/login"
              >
                            <Button
                                          className="searchbar-buttons"
                                          color="secondary"
                                          onClick={[Function]}
                                          tag="button"
                            >
                                          Review
                            </Button>
              </Link>
              <div
                            className="searchbar-buttons-links"
              >
                            <Button
                                          className="searchbar-buttons"
                                          color="secondary"
                                          onClick={[Function]}
                                          tag="button"
                            >
                                          Search
                            </Button>
              </div>
</div>,
          ],
          "className": "searchbar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": Symbol(react.fragment),
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "handleChangeModalType": [Function],
              "handleModalState": [Function],
              "handleSetJwtState": [Function],
              "isOpen": false,
              "type": "login",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <select
                  className="dropdowns"
                  name="make"
                  onChange={[Function]}
>
                  <option>
                                    Select a Make
                  </option>
</select>,
                <Unknown />,
                <Unknown />,
              ],
              "className": "searchfields",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option>
                      Select a Make
</option>,
                    Array [],
                  ],
                  "className": "dropdowns",
                  "name": "make",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Select a Make",
                    },
                    "ref": null,
                    "rendered": "Select a Make",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": Symbol(react.fragment),
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": Symbol(react.fragment),
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  className="searchbar-buttons-links"
                  replace={false}
                  to="/login"
>
                  <Button
                                    className="searchbar-buttons"
                                    color="secondary"
                                    onClick={[Function]}
                                    tag="button"
                  >
                                    Review
                  </Button>
</Link>,
                <div
                  className="searchbar-buttons-links"
>
                  <Button
                                    className="searchbar-buttons"
                                    color="secondary"
                                    onClick={[Function]}
                                    tag="button"
                  >
                                    Search
                  </Button>
</div>,
              ],
              "className": "searchbar-buttons-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Button
                    className="searchbar-buttons"
                    color="secondary"
                    onClick={[Function]}
                    tag="button"
>
                    Review
</Button>,
                  "className": "searchbar-buttons-links",
                  "replace": false,
                  "to": "/login",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Review",
                    "className": "searchbar-buttons",
                    "color": "secondary",
                    "onClick": [Function],
                    "tag": "button",
                  },
                  "ref": null,
                  "rendered": "Review",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Button
                    className="searchbar-buttons"
                    color="secondary"
                    onClick={[Function]}
                    tag="button"
>
                    Search
</Button>,
                  "className": "searchbar-buttons-links",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Search",
                    "className": "searchbar-buttons",
                    "color": "secondary",
                    "onClick": [Function],
                    "tag": "button",
                  },
                  "ref": null,
                  "rendered": "Search",
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "height": "65px",
                                  }
            }
/>,
          <div
            className="searchbar"
>
            <Unknown />
            <LoginRegisterModal
                        handleChangeModalType={[Function]}
                        handleModalState={[Function]}
                        handleSetJwtState={[Function]}
                        isOpen={false}
                        type="login"
            />
            <div
                        className="searchfields"
            >
                        <select
                                    className="dropdowns"
                                    name="make"
                                    onChange={[Function]}
                        >
                                    <option>
                                                Select a Make
                                    </option>
                        </select>
                        <Unknown />
                        <Unknown />
            </div>
            <div
                        className="searchbar-buttons-container"
            >
                        <Link
                                    className="searchbar-buttons-links"
                                    replace={false}
                                    to="/login"
                        >
                                    <Button
                                                className="searchbar-buttons"
                                                color="secondary"
                                                onClick={[Function]}
                                                tag="button"
                                    >
                                                Review
                                    </Button>
                        </Link>
                        <div
                                    className="searchbar-buttons-links"
                        >
                                    <Button
                                                className="searchbar-buttons"
                                                color="secondary"
                                                onClick={[Function]}
                                                tag="button"
                                    >
                                                Search
                                    </Button>
                        </div>
            </div>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "style": Object {
              "height": "65px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Unknown />,
              <LoginRegisterModal
                handleChangeModalType={[Function]}
                handleModalState={[Function]}
                handleSetJwtState={[Function]}
                isOpen={false}
                type="login"
/>,
              <div
                className="searchfields"
>
                <select
                                className="dropdowns"
                                name="make"
                                onChange={[Function]}
                >
                                <option>
                                                Select a Make
                                </option>
                </select>
                <Unknown />
                <Unknown />
</div>,
              <div
                className="searchbar-buttons-container"
>
                <Link
                                className="searchbar-buttons-links"
                                replace={false}
                                to="/login"
                >
                                <Button
                                                className="searchbar-buttons"
                                                color="secondary"
                                                onClick={[Function]}
                                                tag="button"
                                >
                                                Review
                                </Button>
                </Link>
                <div
                                className="searchbar-buttons-links"
                >
                                <Button
                                                className="searchbar-buttons"
                                                color="secondary"
                                                onClick={[Function]}
                                                tag="button"
                                >
                                                Search
                                </Button>
                </div>
</div>,
            ],
            "className": "searchbar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": Symbol(react.fragment),
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "handleChangeModalType": [Function],
                "handleModalState": [Function],
                "handleSetJwtState": [Function],
                "isOpen": false,
                "type": "login",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <select
                    className="dropdowns"
                    name="make"
                    onChange={[Function]}
>
                    <option>
                                        Select a Make
                    </option>
</select>,
                  <Unknown />,
                  <Unknown />,
                ],
                "className": "searchfields",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <option>
                        Select a Make
</option>,
                      Array [],
                    ],
                    "className": "dropdowns",
                    "name": "make",
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Select a Make",
                      },
                      "ref": null,
                      "rendered": "Select a Make",
                      "type": "option",
                    },
                  ],
                  "type": "select",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Symbol(react.fragment),
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Symbol(react.fragment),
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className="searchbar-buttons-links"
                    replace={false}
                    to="/login"
>
                    <Button
                                        className="searchbar-buttons"
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button"
                    >
                                        Review
                    </Button>
</Link>,
                  <div
                    className="searchbar-buttons-links"
>
                    <Button
                                        className="searchbar-buttons"
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button"
                    >
                                        Search
                    </Button>
</div>,
                ],
                "className": "searchbar-buttons-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Button
                      className="searchbar-buttons"
                      color="secondary"
                      onClick={[Function]}
                      tag="button"
>
                      Review
</Button>,
                    "className": "searchbar-buttons-links",
                    "replace": false,
                    "to": "/login",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Review",
                      "className": "searchbar-buttons",
                      "color": "secondary",
                      "onClick": [Function],
                      "tag": "button",
                    },
                    "ref": null,
                    "rendered": "Review",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Button
                      className="searchbar-buttons"
                      color="secondary"
                      onClick={[Function]}
                      tag="button"
>
                      Search
</Button>,
                    "className": "searchbar-buttons-links",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Search",
                      "className": "searchbar-buttons",
                      "color": "secondary",
                      "onClick": [Function],
                      "tag": "button",
                    },
                    "ref": null,
                    "rendered": "Search",
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
